---
import { LINKS } from '../ts/pageLinks';
import Eye from './Eye.astro';

interface Props {
  title: keyof typeof LINKS;
}

const { title } = Astro.props;
---

<script lang="ts">
  window.addEventListener('load', () => {
    const button = document.getElementById('nav-button');
    const nav = document.getElementById('nav');

    if (!button || !nav) return;

    button.addEventListener('click', () => {
      const isOpen = nav.dataset.open === 'true';

      const setIsOpen = !isOpen;

      nav.dataset.open = setIsOpen.toString();
    });
  });
</script>

<header class="header">
  <div class="nav-button-wrapper">
    <button class="nav-button" id="nav-button">
      <Eye id="eye-nav" h={50} />
    </button>
  </div>
  <h1>{LINKS[title].title}</h1>

  <nav id="nav" class="nav">
    <ul class="nav-ul">
      {
        Object.entries(LINKS).map(([t, v]) => (
          <li class="nav-li">
            <a
              href={v.href}
              aria-label={v.title}
              aria-disabled={t === title}
              tabindex={t === title ? -1 : 0}
            >
              <span class="material-symbols-outlined nav-li-icon">
                {v.text}
              </span>
              {v.title}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
</header>

<style lang="scss">
  .header {
    position: sticky;
    top: 0;
    left: 0;
    box-sizing: border-box;
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    width: 100%;
    height: 100px;
    padding: 0 8px;
    background-color: black;
  }

  .nav-button {
    position: relative;
    z-index: 500;
    padding: 0;
    appearance: none;
    pointer-events: auto;
    cursor: pointer;
    outline: none;
    background-color: transparent;
    border: none;

    &-wrapper {
      display: flex;
      align-items: center;
    }
  }

  .nav-ul {
    position: relative;
    z-index: 1;
    display: flex;
    flex-direction: column;
    gap: 20px;
    padding: 0;
    pointer-events: none;
    opacity: 0;
    transition-duration: 0.2s;
    transition-property: opacity;
  }

  .nav {
    @include eye-over('data-open', 'true');

    position: fixed;
    top: 0;
    left: 0;
    z-index: 100;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;

    &[data-open='true'] {
      pointer-events: auto;

      .nav-ul {
        pointer-events: auto;
        opacity: 1;
        transition-delay: 0.2s;
      }
    }
  }

  .nav-li {
    padding: 0;
    font-size: xx-large;
    list-style: none;

    &-icon {
      font-size: xx-large;
    }

    & > a {
      display: grid;
      grid-template-columns: 50px auto;
      align-items: center;

      &[aria-disabled='true'] {
        color: gray;
        pointer-events: none;
      }
    }
  }
</style>
